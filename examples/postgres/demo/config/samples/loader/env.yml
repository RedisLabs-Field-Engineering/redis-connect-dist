connections:
  - id: jobManagerConnection #Redis Connect Job Metadata connection
    type: Redis
    url: redis://127.0.0.1:14001 #this is based on lettuce uri syntax
    jobmanager.username: ${REDISCONNECT_JOBMANAGER_USERNAME} #this can be overridden by an env variable or a property file
    jobmanager.password: ${REDISCONNECT_JOBMANAGER_PASSWORD} #this can be overridden by an env variable or a property file
    #credentials.file.path: <path to <redisconnect_credentials_jobmanager_<job_name> e.g. /var/secrets/jobmanager> when username and password are not provided here
  - id: targetConnection #target Redis connection
    type: Redis
    url: redis://127.0.0.1:14000 #this is based on lettuce uri syntax
    target.username: ${REDISCONNECT_TARGET_USERNAME} #this can be overridden by an env variable or a property file
    target.password: ${REDISCONNECT_TARGET_PASSWORD} #this can be overridden by an env variable or a property file
    #credentials.file.path: <path to <redisconnect_credentials_redis_<job_name> e.g. /var/secrets/redis> when username and password are not provided here
  - id: RDBConnection
    type: RDB
    name: RedisConnect #database pool name
    database: RedisConnect #database
    url: "jdbc:postgresql://127.0.0.1:5432/RedisConnect" #this is jdbc client driver specific, and it can contain any supported parameters
    host: 127.0.0.1
    port: 5432
    source.username: ${REDISCONNECT_SOURCE_USERNAME} #this can be overridden by an env variable or a property file
    source.password: ${REDISCONNECT_SOURCE_PASSWORD} #this can be overridden by an env variable or a property file
    #credentials.file.path: <path to <redisconnect_credentials_postgresql_<job_name> e.g. /var/secrets/postgresql> when username and password are not provided here
    #credentials.rotation.eventlistener.enabled: false #uncomment and make it true if you need credentials rotation support